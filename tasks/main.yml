---
# tasks file for httpd
- name: Fetch Apache Package from remote rpm_location
  get_url:
    dest: "/tmp/{{ rpm_name }}"
    url: "{{ rpm_location }}"

- name: Get current version of Apache installed
  package_facts:
    manager: rpm
  register: packages

- debug:
    var: packages.ansible_facts.packages['httpd'][0]['release']

- name: Get installed Apache via yum
  shell: |
    yum list installed httpd.x86_64 | tail -n1 | awk '{print $2}'
  register: installed_version

- debug:
     var: installed_version['stdout']

- name: Disable server on HAProxy by draining
  haproxy:
    state: disabled
    drain: yes
    wait: yes
    host: "{{ inventory_hostname }}"
    backend: www
    socket: /var/run/haproxy.sock
  ignore_errors: true

- name: Install the specified version of Apache HTTPD
  yum:
    name: "/tmp/{{ rpm_name }}"
    state: installed
    allow_downgrade: yes
    skip_broken: yes
  when: installed_version['stdout'] != http_version and action == "normal"
  notify: Restart Apache

- name: Run re-install of Apache HTTPD as versions are the same
  shell: |
    yum -y reinstall /tmp/{{ rpm_name }}
  when: installed_version['stdout'] == http_version and action == "reinstall"
  notify: Restart Apache

- name: Allow port 80 firewall
  firewalld:
    service: http
    permanent: yes
    state: enabled
    immediate: yes

- name: Set systemd to start Apache on boot
  systemd:
    name: httpd
    enabled: yes
    daemon_reload: yes
    state: started

- name: Clean up rpm file
  file:
    path: /tmp/apache.rpm
    state: absent

- name: Enable server on HAProxy
  haproxy:
    state: enabled
    wait: yes
    host: "{{ inventory_hostname }}"
    backend: www
    socket: /var/run/haproxy.sock
  ignore_errors: true
